#Correct
#Simple Testing Grounds
building_simple_testing_grounds = {
	
	base_buildtime = 0
	can_demolish = yes

		category = research
		
		#Correct
		potential = {
			NOT = { has_modifier = resort_colony }
			NOT = { has_modifier = slave_colony }
		}

		#Correct
		allow = {
		}

		#Correct
		destroy_trigger = {
			OR = {
				OR = {
					has_modifier = slave_colony
					has_modifier = resort_colony
				}
				AND = {
					exists = owner
            			owner = {
                			is_ai = yes
            			}
            	AND = {
					free_building_slots = 0
					free_jobs >= 1
					}
				}
			}
		}

		#Correct
		#Words

		triggered_desc = {
			text = simple_testing_grounds_effect
		}

		triggered_desc = {
			text = base_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_gaia
				}
			}
			text = gaia_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_nuked
				}
			}
			text = nuked_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_city
				}
			}
			text = city_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_hive
				}
			}
			text = hive_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_relic
				}
			}
			text = relic_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_desert
				}
			}
			text = desert_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_arid
				}
			}
			text = arid_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_savannah
				}
			}
			text = savannah_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_arctic
				}
			}
			text = arctic_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_tundra
				}
			}
			text = tundra_testing_grounds_effect
		}
		
		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_alpine
				}
			}
			text = alpine_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_ocean
				}
			}
			text = ocean_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_tropical
				}
			}
			text = tropical_testing_grounds_effect
		}

		triggered_desc = {
			trigger = {
				planet = {
					is_planet_class = pc_continental
				}
			}
			text = continental_testing_grounds_effect
		}
		
		#Correct
		resources = {
			category = planet_buildings
			produces = {
				engineering_research = 2
				physics_research = 2
				society_research = 2
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_gaia
					}
				}
				physics_research = 6
				engineering_research = 6
				society_research = 6
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_nuked
					}
				}
				physics_research = 10
				engineering_research = 6
				society_research = 2
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_city
					}
				}
				physics_research = 6
				engineering_research = 10
				society_research = 2
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_hive
					}
				}
				society_research = 18
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_relic
					}
				}
				physics_research = 18
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_machine
					}
				}
				engineering_research = 18
			}
			#
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_desert
					}
				}
				engineering_research = 6
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_arid
					}
				}
				engineering_research = 4
				physics_research = 2
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_savannah
					}
				}
				engineering_research = 4
				society_research = 2
			}
			#
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_arctic
					}
				}
				physics_research = 6
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_tundra
					}
				}
				physics_research = 4
				engineering_research = 2
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_alpine
					}
				}
				physics_research = 4
				society_research = 2
			}
			#
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_ocean
					}
				}
				society_research = 6
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_tropical
					}
				}
				society_research = 4
				physics_research = 2
			}
			produces = {
				trigger = {
					planet = {
						is_planet_class = pc_continental
					}
				}
				society_research = 4
				engineering_research = 2
			}
		}

		#Correct
		upgrades = {
			building_super_computers_station
		}

		#Correct
		ai_weight = {
			weight = 0
			modifier = {
				weight = 1000
				#Decide if have resources to sustain this.
				AND = {
					free_building_slots >= 1
					free_jobs = 0
					free_amenities > 2 #Prevents running out of amenities
					NOT = {
						owner = {
							has_monthly_income = {
								resource = energy
								value < 25
							}
							has_monthly_income = {
								resource = minerals
								value < 25
							}
						}
					}
				}
				#Following calculates the worth of building this.
				OR = {
					AND = {
						has_upgraded_capital = no
						has_major_upgraded_capital = no
						has_fully_upgraded_capital = no
					}
					AND = {
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 40
							}
							owner = {
								NOT = {
									has_technology = tech_basic_science_lab_2
									has_technology = tech_hyper_processors
								}
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 100
							}
							owner = {
								has_technology = tech_basic_science_lab_2
								NOT = {
									has_technology = tech_hyper_processors
								}
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 160
							}
							owner = {
								has_technology = tech_basic_science_lab_3
								NOT = {
									has_technology = tech_hyper_processors
								}
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 13
							}
							owner = {
								has_technology = tech_hyper_processors
								NOT = {
									has_technology = tech_basic_science_lab_2
								}
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 33
							}
							owner = {
								has_technology = tech_hyper_processors
								has_technology = tech_basic_science_lab_2
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 53
							}
							owner = {
								has_technology = tech_hyper_processors
								has_technology = tech_basic_science_lab_3
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 8
							}
							owner = {
								has_technology = tech_quantum_computers
								NOT = {
									has_technology = tech_basic_science_lab_2
								}
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 20
							}
							owner = {
								has_technology = tech_quantum_computers
								has_technology = tech_basic_science_lab_2
							}
						}
						AND = {
							count_pops = {
								limit = {
									is_specialist_researcher = yes
								}
								count > 32
							}
							owner = {
								has_technology = tech_quantum_computers
								has_technology = tech_basic_science_lab_3
							}
						}
					}
				}
			}

			modifier = {
				factor = 0
				has_building = building_simple_testing_grounds
			}

			modifier = {
				factor = 0
				owner = { has_country_flag = buildings_new_simple_testing_grounds }
			}
		}

		#Correct
		on_built = {
			owner = { set_timed_country_flag = { flag = buildings_new_simple_testing_grounds days = 60 } }
		}

		#Correct
		prerequisites = {
			"tech_basic_exo_testing"
	}
}

#Correct
#Super Computer Hub 
building_super_computers_station = {
	
	base_buildtime = @building_build_time1
	can_build = no
	can_demolish = yes

		category = research
		
		#Correct
		potential = {
			NOT = { has_modifier = resort_colony }
			NOT = { has_modifier = slave_colony }
		}

		#Correct
		allow = {
			has_upgraded_capital = yes
		}

		#Correct
		destroy_trigger = {
			OR = {
				OR = {
					has_modifier = slave_colony
					has_modifier = resort_colony
				}
				AND = {
					exists = owner
            owner = {
                is_ai = yes
            }
            AND = {
				free_building_slots = 0
				NOT = {
					has_building = building_hyper_computers_station
					has_building = building_quantum_computers_station
				}
				owner = {
					OR = {
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value < 4
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value < 1
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value < 3
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value < 1
							}
							country_uses_consumer_goods = no
						}
					}
				}
			}
			owner = {
				NOT = {
					has_country_flag = freed_energy
					has_country_flag = freed_consumer_goods
					has_country_flag = freed_minerals
				}
			}
				}
			}
		}

		#Correct
		on_destroy = {
			owner = {
				set_timed_country_flag = {
					flag = freed_energy
					days = 60
				}
			}
			if = {
				limit = { 
					owner = {
						country_uses_consumer_goods = yes
					} 
				}
				owner = {
					set_timed_country_flag = {
						flag = freed_consumer_goods
						days = 120
					}
				}
			}
			if = {
				limit = { 
					owner = {
						is_hive_empire = yes
					} 
				}
				owner = {
					set_timed_country_flag = {
						flag = freed_minerals
						days = 60
					}
				}
			}
		}

		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_regular_empire = yes }
			}
			modifier = {
				job_computer_technician_add = 1
			}
		}

		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			modifier = {
				job_gigamind_drone_add = 1
			}
		}
	
		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			modifier = {
				job_computing_drone_add = 1
			}
		}
		
		#Correct
		resources = {
			category = planet_buildings
			cost = {
				minerals = @building_build_cost2
			}
			upkeep = {
				energy = 1
			}
		}

		#Correct
		upgrades = {
			building_hyper_computers_station
		}

		#Correct
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_regular_empire = yes }
			}
			text = job_computer_technician_effect_desc
		}
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			text = job_gigamind_drone_effect_desc
		}
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			text = job_computing_drone_effect_desc
		}

		#Correct
		ai_weight = {
			weight = 0
			modifier = {
				weight = 100
				#Decide if have resources to sustain this.
				AND = {
					free_building_slots >= 1
					free_amenities > 2 #Prevents running out of amenities
					owner = {
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value > 8
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value > 2
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value > 6
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value > 2
							}
							country_uses_consumer_goods = no
						}
					}
				}
				#Following calculates the worth of building this.
				OR = {
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 40
						}
						owner = {
							NOT = {
								has_technology = tech_basic_science_lab_2
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 100
						}
						owner = {
							has_technology = tech_basic_science_lab_2
							NOT = {
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 160
						}
						owner = {
							has_technology = tech_basic_science_lab_3
							NOT = {
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 13
						}
						owner = {
							has_technology = tech_hyper_processors
							NOT = {
								has_technology = tech_basic_science_lab_2
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 33
						}
						owner = {
							has_technology = tech_hyper_processors
							has_technology = tech_basic_science_lab_2
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 53
						}
						owner = {
							has_technology = tech_hyper_processors
							has_technology = tech_basic_science_lab_3
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 8
						}
						owner = {
							has_technology = tech_quantum_computers
							NOT = {
								has_technology = tech_basic_science_lab_2
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 20
						}
						owner = {
							has_technology = tech_quantum_computers
							has_technology = tech_basic_science_lab_2
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 32
						}
						owner = {
							has_technology = tech_quantum_computers
							has_technology = tech_basic_science_lab_3
						}
					}
				}
				count_pops = {
					limit = {
						has_job = no
					}
					count >= 1
				}
			}

			modifier = {
				factor = 5
				count_pops = {
					limit = {
						has_job = no
					}
					count >= 3
				}
			}

			modifier = {
				factor = 2
				has_building = building_super_computers_station
			}

			modifier = {
				factor = 0
				owner = { has_country_flag = buildings_new_super_computers_station }
			}
		}

		#Correct
		on_built = {
			if = {
				limit = {
					owner = {
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value > 12
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value > 4
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value > 12
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value > 4
							}
							country_uses_consumer_goods = no
						}
					}
				}
			owner = { set_timed_country_flag = { flag = buildings_new_super_computers_station days = 120 } }
		}
	}

		#Correct
		prerequisites = {
			"tech_computing_super_system"
	}
}

########################################################################################

#Hyper-computing Facility 
building_hyper_computers_station = {
	
	base_buildtime = @building_build_time2
	can_build = no
	can_demolish = yes

		category = research
		
		#Correct
		potential = {
			NOT = { has_modifier = resort_colony }
			NOT = { has_modifier = slave_colony }
		}

		#Correct
		allow = {
			has_upgraded_capital = yes
		}

		#Correct
		destroy_trigger = {
			OR = {
				OR = {
					has_modifier = slave_colony
					has_modifier = resort_colony
					buildings_no_exotic_gases = yes
				}
				AND = {
					exists = owner
            owner = {
                is_ai = yes
            }
            AND = {
				free_building_slots = 0
				NOT = {
					has_building = building_quantum_computers_station
				}
				owner = {
					OR = {
						has_monthly_income = {
							resource = exotic_gases
							value < 1
						}
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value < 12
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value < 3
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value < 9
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value < 3
							}
							country_uses_consumer_goods = no
						}
					}
				}
			}
		}
	}
			owner = {
				NOT = {
					has_country_flag = freed_energy
					has_country_flag = freed_consumer_goods
					has_country_flag = freed_exotic_gases
					has_country_flag = freed_minerals
				}
			}
		}

		#Correct
		on_destroy = {
			owner = {
				set_timed_country_flag = {
					flag = freed_energy
					days = 60
				}
				set_timed_country_flag = {
					flag = freed_exotic_gases
					days = 120
				}
			}
			if = {
				limit = { 
					owner = {
						country_uses_consumer_goods = yes
					} 
				}
				owner = {
					set_timed_country_flag = {
						flag = freed_consumer_goods
						days = 120
					}
				}
			}
			if = {
				limit = { 
					owner = {
						is_hive_empire = yes
					} 
				}
				owner = {
					set_timed_country_flag = {
						flag = freed_minerals
						days = 60
					}
				}
			}
		}

		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_regular_empire = yes }
			}
			modifier = {
				job_computer_technician_add = 3
			}
		}

		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			modifier = {
				job_gigamind_drone_add = 3
			}
		}
	
		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			modifier = {
				job_computing_drone_add = 3
			}
		}

		#Correct
		resources = {
			category = planet_buildings
			cost = {
				minerals = @building_build_cost4
				exotic_gases = @building_build_srcost1
			}
			upkeep = {
				energy = 3
				exotic_gases = 1
			}
		}

		#Correct
		upgrades = {
			building_quantum_computers_station
		}

		#Correct
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_regular_empire = yes }
			}
			text = job_computer_technician_effect_desc
		}
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			text = job_gigamind_drone_effect_desc
		}
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			text = job_computing_drone_effect_desc
		}

		#Correct
		ai_weight = {
			weight = 0
			modifier = {
				weight = 100
				AND = {
					free_amenities > 2 #Prevents running out of amenities
					free_building_slots >= 1
					owner = {
						has_monthly_income = {
							resource = exotic_gases
							value > 2
						}
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value > 24
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value > 6
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value > 18
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value > 6
							}
							country_uses_consumer_goods = no
						}
					}
				}
				#Following calculates the worth of building this.
				OR = {
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 40
						}
						owner = {
							NOT = {
								has_technology = tech_basic_science_lab_2
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 100
						}
						owner = {
							has_technology = tech_basic_science_lab_2
							NOT = {
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 160
						}
						owner = {
							has_technology = tech_basic_science_lab_3
							NOT = {
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 13
						}
						owner = {
							has_technology = tech_hyper_processors
							NOT = {
								has_technology = tech_basic_science_lab_2
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 33
						}
						owner = {
							has_technology = tech_hyper_processors
							has_technology = tech_basic_science_lab_2
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 53
						}
						owner = {
							has_technology = tech_hyper_processors
							has_technology = tech_basic_science_lab_3
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 8
						}
						owner = {
							has_technology = tech_quantum_computers
							NOT = {
								has_technology = tech_basic_science_lab_2
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 20
						}
						owner = {
							has_technology = tech_quantum_computers
							has_technology = tech_basic_science_lab_2
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 32
						}
						owner = {
							has_technology = tech_quantum_computers
							has_technology = tech_basic_science_lab_3
						}
					}
				}
				count_pops = {
					limit = {
						has_job = no
					}
					count >= 1
				}
			}

			modifier = {
				factor = 5
				count_pops = {
					limit = {
						has_job = no
					}
					count >= 3
				}
			}

			modifier = {
				factor = 2
				has_building = building_hyper_computers_station
			}

			modifier = {
				factor = 0
				owner = { has_country_flag = buildings_new_hyper_computers_station }
			}
		}

		#Correct
		on_built = {
			if = {
				limit = {
					owner = {
						has_monthly_income = {
							resource = exotic_gases
							value > 4
						}
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value > 48
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value > 12
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value > 36
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value > 12
							}
							country_uses_consumer_goods = no
						}
					}
				}
				owner = { set_timed_country_flag = { flag = buildings_new_hyper_computers_station days = 120 } }
			}
		}

		#Correct
		prerequisites = {
			"tech_hyper_processors"
	}
}

########################################################################################

#Correct
#Quantum Computers Station
building_quantum_computers_station = {
	
	base_buildtime = @building_build_time3
	can_build = no
	can_demolish = yes

		category = research
		
		potential = {
			NOT = { has_modifier = resort_colony }
			NOT = { has_modifier = slave_colony }
		}

		#Correct
		allow = {
			has_major_upgraded_capital = yes
		}

		#Correct
		destroy_trigger = {
			OR = {
				OR = {
					has_modifier = slave_colony
					has_modifier = resort_colony
					buildings_no_exotic_gases = yes
				}
				AND = {
					exists = owner
            owner = {
                is_ai = yes
            }
            AND = {
				free_building_slots = 0
				owner = {
					OR = {
						has_monthly_income = {
							resource = exotic_gases
							value < 2
						}
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value < 20
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value < 5
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value < 15
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value < 5
							}
							country_uses_consumer_goods = no
						}
					}
				}
			}
		}
	}
			owner = {
				NOT = {
					has_country_flag = freed_energy
					has_country_flag = freed_consumer_goods
					has_country_flag = freed_exotic_gases
					has_country_flag = freed_minerals
				}
			}
		}

		#Correct
		on_destroy = {
			owner = {
				set_timed_country_flag = {
					flag = freed_energy
					days = 60
				}
				set_timed_country_flag = {
					flag = freed_exotic_gases
					days = 120
				}
			}
			if = {
				limit = { 
					owner = {
						country_uses_consumer_goods = yes
					} 
				}
				owner = {
					set_timed_country_flag = {
						flag = freed_consumer_goods
						days = 120
					}
				}
			}
			if = {
				limit = { 
					owner = {
						is_hive_empire = yes
					} 
				}
				owner = {
					set_timed_country_flag = {
						flag = freed_minerals
						days = 60
					}
				}
			}
		}

		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_regular_empire = yes }
			}
			modifier = {
				job_computer_technician_add = 5
			}
		}

		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			modifier = {
				job_gigamind_drone_add = 5
			}
		}
	
		#Correct
		triggered_planet_modifier = {
			potential = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			modifier = {
				job_computing_drone_add = 5
			}
		}

		#Correct
		resources = {
			category = planet_buildings
			cost = {
				minerals = @building_build_cost6
				exotic_gases = @building_build_srcost2
			}
			upkeep = {
				energy = 5
				exotic_gases = 2
			}
		}

		#Correct
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_regular_empire = yes }
			}
			text = job_computer_technician_effect_desc
		}
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_hive_empire = yes }
			}
			text = job_gigamind_drone_effect_desc
		}
		triggered_desc = {
			trigger = {
				exists = owner
				owner = { is_machine_empire = yes }
			}
			text = job_computing_drone_effect_desc
		}

		#Correct
		ai_weight = {
			weight = 0
			modifier = {
				weight = 100
				AND = {
					free_amenities > 2 #Prevents running out of amenities
					free_building_slots >= 1
					owner = {
						has_monthly_income = {
							resource = exotic_gases
							value > 4
						}
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value > 40
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value > 10
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value > 30
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value > 10
							}
							country_uses_consumer_goods = no
						}
					}
				}
				#Following calculates the worth of building this.
				OR = {
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 40
						}
						owner = {
							NOT = {
								has_technology = tech_basic_science_lab_2
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 100
						}
						owner = {
							has_technology = tech_basic_science_lab_2
							NOT = {
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 160
						}
						owner = {
							has_technology = tech_basic_science_lab_3
							NOT = {
								has_technology = tech_hyper_processors
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 13
						}
						owner = {
							has_technology = tech_hyper_processors
							NOT = {
								has_technology = tech_basic_science_lab_2
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 33
						}
						owner = {
							has_technology = tech_hyper_processors
							has_technology = tech_basic_science_lab_2
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 53
						}
						owner = {
							has_technology = tech_hyper_processors
							has_technology = tech_basic_science_lab_3
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 8
						}
						owner = {
							has_technology = tech_quantum_computers
							NOT = {
								has_technology = tech_basic_science_lab_2
							}
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 20
						}
						owner = {
							has_technology = tech_quantum_computers
							has_technology = tech_basic_science_lab_2
						}
					}
					AND = {
						count_pops = {
							limit = {
								is_specialist_researcher = yes
							}
							count > 32
						}
						owner = {
							has_technology = tech_quantum_computers
							has_technology = tech_basic_science_lab_3
						}
					}
				}
				count_pops = {
					limit = {
						has_job = no
					}
					count >= 1
				}
			}

			modifier = {
				factor = 5
				count_pops = {
					limit = {
						has_job = no
					}
					count >= 3
				}
			}

			modifier = {
				factor = 2
				has_building = building_quantum_computers_station
			}

			modifier = {
				factor = 0
				owner = { has_country_flag = buildings_new_quantum_computers_station }
			}
		}

		#Correct
		on_built = {
			if = {
				limit = {
					owner = {
						has_monthly_income = {
							resource = exotic_gases
							value > 8
						}
						if = {
							limit = { is_machine_empire = yes }
							has_monthly_income = {
								resource = energy
								value > 80
							}
						}
						else = {
							has_monthly_income = {
								resource = energy
								value > 20
							}
						}
						if = {
							limit = { is_hive_empire = yes }
							has_monthly_income = {
								resource = minerals
								value > 60
							}
						}
						OR = {
							has_monthly_income = {
								resource = consumer_goods
								value > 20
							}
							country_uses_consumer_goods = no
						}
					}
				}
				owner = { set_timed_country_flag = { flag = buildings_new_quantum_computers_station days = 120 } }
			}
		}

		#Correct
		prerequisites = {
			"tech_quantum_computers"
	}
}