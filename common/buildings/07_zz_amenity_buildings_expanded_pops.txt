#############
# Amenities buildings
#############
building_luxury_residence = {
	base_buildtime = @b1_time

	category = amenity
	
	potential = {
		OR = {
			NOT = { is_planet_class = pc_habitat }
			has_planet_flag = advanced_habitat
		}
		NOT = { has_modifier = slave_colony }		
		exists = owner
		owner = { 
			is_regular_empire = yes
			NOT = { has_valid_civic = civic_shared_burden }
			NOT = { has_valid_civic = civic_worker_coop }
		}
	}
	
	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				free_building_slots = 0
				free_jobs < 1
				free_housing > 10
				owner = {
					is_ai = yes
				}
			}
			owner = { is_regular_empire = no }
			owner = { has_valid_civic = civic_shared_burden }
			owner = { has_valid_civic = civic_worker_coop }
			has_modifier = slave_colony
		}
	}
	
	convert_to = {
		building_drone_storage
		building_hive_warren
		building_communal_housing
		building_organic_sanctuary
	}
		
	planet_modifier = {
		planet_housing_add = 3
		planet_amenities_add = 5
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_functional_architecture_megacorp
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		"building_paradise_dome"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 100 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 2 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing < 0 #Prevents the AI from running out of residences when nearly out of tiles
					NOT = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
		}
		modifier = {
			factor = 0
			has_building = building_luxury_residence
			owner = { has_technology = tech_paradise_dome }
		}
	}
}

building_paradise_dome = {

	base_buildtime = @b2_time
	can_build = no

	category = amenity
	
	potential = {
		has_building = building_luxury_residence
		OR = {
			NOT = { is_planet_class = pc_habitat }
			AND = {
				has_planet_flag = advanced_habitat
				exists = owner
				owner = {
					has_ascension_perk = ap_voidborn
				}
			}
		}
	}

	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			owner = { has_valid_civic = civic_shared_burden }
			owner = { has_valid_civic = civic_worker_coop }

			has_modifier = slave_colony
		}
	}
	
	convert_to = {
		building_organic_paradise
		building_drone_megastorage
		building_expanded_warren
		building_communal_housing_large
	}
	
	planet_modifier = {
		planet_housing_add = 6
		planet_amenities_add = 10
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_functional_architecture_megacorp
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = 3
			rare_crystals = @b2_rare_upkeep
		}
	}
	
	prerequisites = {
		"tech_paradise_dome"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 1
			buildings_has_crystals = yes
		}
		modifier = {
			factor = 10
			free_housing < 0
		}
	}
	on_queued = {
		IF = {
			limit = {
				owner = { has_technology = tech_construction_templates }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 270 } }
		}
		ELSE_IF = {
			limit = {
				owner = { has_technology = tech_assembly_pattern }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 390 } }
		}
		else = {
			planet = {
				owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 510 } }
			}
		}
	}
}

building_communal_housing = {

	base_buildtime = @b1_time
	icon = building_residence

	category = amenity
	
	potential = {
		exists = owner
		OR = {
			NOT = { is_planet_class = pc_habitat }
			has_planet_flag = advanced_habitat
		}
		NOT = { has_modifier = slave_colony }
		owner = { 
			is_regular_empire = yes
			OR = {
				has_valid_civic = civic_shared_burden
				has_valid_civic = civic_worker_coop
			}
		}
	}
	
	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				free_building_slots = 0
				free_jobs < 1
				free_housing > 10
				owner = {
					is_ai = yes
				}
			}
			NOR = {
				NOT = { is_planet_class = pc_habitat }
				NOT = { has_modifier = slave_colony }
				owner = { 
					is_regular_empire = yes
					OR = {
						has_valid_civic = civic_shared_burden
						has_valid_civic = civic_worker_coop
					}
				}
			}
		}
	}
	
	convert_to = {
		building_drone_storage
		building_hive_warren
		building_luxury_residence
		building_organic_sanctuary
	}
		
	planet_modifier = {
		planet_housing_add = 5
		planet_amenities_add = 3
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_functional_architecture_megacorp
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		"building_communal_housing_large"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 100 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 3 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing < 0 #Prevents the AI from running out of residences when nearly out of tiles
					NOT = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
		}
		modifier = {
			factor = 0
			has_building = building_communal_housing
			owner = { has_technology = tech_paradise_dome }
		}
	}
}

building_communal_housing_large = {

	base_buildtime = @b2_time
	can_build = no
	icon = building_paradise_dome

	category = amenity

	potential = {
		has_building = building_communal_housing
		OR = {
			NOT = { is_planet_class = pc_habitat }
			AND = {
				has_planet_flag = advanced_habitat
				exists = owner
				owner = {
					has_ascension_perk = ap_voidborn
				}
			}
		}
	}	
	
	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			has_modifier = slave_colony

			owner = {
				NOT = { has_valid_civic = civic_shared_burden }
				NOT = { has_valid_civic = civic_worker_coop }
			}
		}
	}
	
	show_tech_unlock_if = { 
		owner = { 
			is_regular_empire = yes
			OR = {
				has_valid_civic = civic_shared_burden
				has_valid_civic = civic_worker_coop
			}
		}
	}
	
	convert_to = {
		building_drone_megastorage
		building_expanded_warren
		building_paradise_dome
		building_organic_paradise
	}
	
	planet_modifier = {
		planet_housing_add = 10
		planet_amenities_add = 6
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				OR = {
					has_valid_civic = civic_functional_architecture
					has_valid_civic = civic_functional_architecture_megacorp
				}
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_non_swapped_tradition = tr_domination_imperious_architecture
			}					
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b3_upkeep
		}
	}
	
	show_tech_unlock_if = {
		OR = {
			has_valid_civic = civic_shared_burden
			has_valid_civic = civic_worker_coop
		}
	}
	
	prerequisites = {
		"tech_paradise_dome"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 1
			buildings_has_crystals = yes
		}
		modifier = {
			factor = 10
			free_housing < 0
		}
	}
}

#Machine housing
building_drone_storage = {

	base_buildtime = @b1_time

	category = amenity
	
	potential = {
		exists = owner
		owner = { is_machine_empire = yes }
	}
	
	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				free_building_slots = 0
				free_jobs < 1
				free_housing > 10
				owner = {
					is_ai = yes
				}
			}
			NOR = {
				owner = { is_machine_empire = yes }
			}
		}
	}
	
	convert_to = {
		building_luxury_residence
		building_communal_housing
		building_hive_warren
	}
		
	planet_modifier = {
		planet_housing_add = 4
		planet_amenities_add = 3
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_machine_builder
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		"building_drone_megastorage"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 100 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 3 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing < 0 #Prevents the AI from running out of residences when nearly out of tiles
					NOT = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
		}
		modifier = {
			weight = 100 #High weight to gurantee that if the below is true then the AI should build it
			is_planet_class = pc_habitat
			free_housing < 4
			OR = {
				not = { any_owned_pop = { is_unemployed = yes } }
				free_jobs > 0 #Servitors can run into a situation with no houses but free jobs open
			}
		}
		modifier = {
			factor = 0
			has_building = building_drone_storage
			owner = { has_technology = tech_micro_replicators }
		}
	}
}

building_drone_megastorage = {

	base_buildtime = @b2_time
	can_build = no

	category = amenity

	allow = {
		has_upgraded_capital = yes
	}
	potential = {
		has_building = building_drone_storage
	}
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_machine_empire = no }

		}
	}
	
	convert_to = {
		building_paradise_dome
		building_expanded_warren
		building_communal_housing_large
	}
	
	planet_modifier = {
		planet_housing_add = 8
		planet_amenities_add = 6
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_machine_builder
			}					
		}
		modifier = {
			planet_housing_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		upkeep = {
			energy = @b1_upkeep
			rare_crystals = @b2_rare_upkeep
		}
	}
	
	
	prerequisites = {
		"tech_micro_replicators" 
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 1
			buildings_has_crystals = yes
		}
	}
	on_queued = {
		IF = {
			limit = {
				owner = { has_technology = tech_construction_templates }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 270 } }
		}
		ELSE_IF = {
			limit = {
				owner = { has_technology = tech_assembly_pattern }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 390 } }
		}
		else = {
			planet = {
				owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 510 } }
			}
		}
	}
}

#Hive housing
building_hive_warren = {

	base_buildtime = @b1_time

	category = amenity
	
	potential = {
		exists = owner
		owner = { is_hive_empire = yes }
	}

	allow = {
		buildings_simple_allow = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			AND = {
				planet = {
					free_building_slots = 0
					free_jobs < 1
					free_housing > 10
					owner = {
						is_ai = yes
					}
				}
			}
			NOR = {
				owner = { is_hive_empire = yes }
			}
		}
	}
	
	convert_to = {
		building_luxury_residence
		building_drone_storage
		building_communal_housing
	}
		
	planet_modifier = {
		planet_housing_add = 3
		planet_amenities_add = 5
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_underground_drones
			}					
		}
		modifier = {
			planet_amenities_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	
	resources = {
		category = planet_buildings
		cost = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = @b1_minerals
		}
		cost = {
			trigger = {
				exists = owner
				owner = {
					NOT = { has_valid_civic = civic_integrated_bioarchitecture }
					is_lithoid_empire = no
				}
			}
			minerals = @b1_hive_minerals
			food = @b1_hive_food
		}
		cost = {
			trigger = {
				exists = owner
				owner = {
					has_valid_civic = civic_integrated_bioarchitecture
					is_lithoid_empire = no
				}
			}
			food = @b1_minerals
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			energy = @b1_upkeep_hive
			food = @b1_upkeep_food
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		"building_expanded_warren"
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 100 #High weight to gurantee that if the below is true then the AI should build it
			free_housing < 3 #Prevents the AI from running out of residences when nearly out of tiles
			OR = {
				free_jobs > 0 #prevents spamming of residence buildings when no jobs are open
				AND = {
					free_housing < 0 #Prevents the AI from running out of residences when nearly out of tiles
					NOT = { any_owned_pop = { is_unemployed = yes } }
				}
			}
			free_district_slots = 0 #Do not build when city districts can still be built
		}
		modifier = {
			weight = 100 #High weight to gurantee that if the below is true then the AI should build it
			is_planet_class = pc_habitat
			free_housing < 4
			OR = {
				not = { any_owned_pop = { is_unemployed = yes } }
				free_jobs > 0 #Servitors can run into a situation with no houses but free jobs open
			}
		}
		modifier = {
			factor = 0
			has_building = building_hive_warren
			owner = { has_technology = tech_housing_2 }
		}
	}
}

building_expanded_warren = {

	base_buildtime = @b2_time
	can_build = no
	
	category = amenity
	
	potential = {
		has_building = building_hive_warren
	}

	allow = {
		has_upgraded_capital = yes
	}
	
	show_tech_unlock_if = { 
		owner = { is_hive_empire = yes }
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_hive_empire = no }

		}
	}
	
	convert_to = {
		building_paradise_dome
		building_drone_megastorage
		building_communal_housing_large
	}
	
	planet_modifier = {
		planet_housing_add = 8
		planet_amenities_add = 6
	}
	
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_underground_drones
			}					
		}
		modifier = {
			planet_amenities_add = 2
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_1 
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}
	triggered_planet_modifier = {
		potential = {
			exists = owner
			owner = { 
				has_technology = tech_housing_2 
				NOT = { has_valid_civic = civic_agrarian_idyll }
			}
		}
		modifier = {
			planet_housing_add = 1
		}
	}

	resources = {
		category = planet_buildings
		cost = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			minerals = @b2_minerals
			rare_crystals = @b2_rare_cost
		}
		cost = {
			trigger = {
				exists = owner
				owner = {
					NOT = { has_valid_civic = civic_integrated_bioarchitecture } is_lithoid_empire = no
				}
			}
			minerals = @b2_hive_minerals
			food = @b2_hive_food
			rare_crystals = @b2_rare_upkeep
		}
		cost = {
			trigger = {
				exists = owner
				owner = { has_valid_civic = civic_integrated_bioarchitecture is_lithoid_empire = no }
			}
			food = @b2_minerals
			rare_crystals = @b2_rare_upkeep
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = no
				}
			}
			energy = @b2_upkeep
			food = @b2_upkeep
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
				}
			}
			energy = @b1_upkeep
			minerals = @b2_upkeep
		}
	}
	
	
	prerequisites = {
		"tech_housing_2" 
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 1
			buildings_has_crystals = yes
		}
	}
	on_queued = {
		IF = {
			limit = {
				owner = { has_technology = tech_construction_templates }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 270 } }
		}
		ELSE_IF = {
			limit = {
				owner = { has_technology = tech_assembly_pattern }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 390 } }
		}
		else = {
			planet = {
				owner = { set_timed_country_flag = { flag = buildings_new_crystal_building days = 510 } }
			}
		}
	}
}

building_holo_theatres = {
	base_buildtime = @b1_time
	category = amenity
	
	potential = {
		NOT = {	has_modifier = slave_colony	}		
		owner = { is_regular_empire = yes }
		owner = { NOT = { has_valid_civic = civic_warrior_culture } }
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			owner = { has_valid_civic = civic_warrior_culture }
			has_modifier = slave_colony
			AND = {
				free_building_slots = 0
				owner = { is_ai = yes }
				OR = {
					free_amenities > 30
					AND = {
						count_pops = { limit = { is_sapient = yes } count < 75 }
						owner = {
							is_ai = yes
							has_technology = tech_frontier_health 
						}
						NOR = {
							has_building = building_clinic
							has_building = building_hospital
						}
					}
					AND = {
						owner = {
							is_ai = yes
							NOT = { has_policy_flag = robots_outlawed }
							has_technology = tech_robotic_workers 
						}
						NOT = { has_building = building_robot_assembly_plant }
					}
				}
			}
		}
	}
	
	convert_to = {
		building_combat_arena
	}
		
	planet_modifier = {
		job_entertainer_add = @b1_jobs
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					NAND = {
						is_lithoid_empire = yes
						has_valid_civic = civic_agribusiness
					}
				}
			}
			energy = @b1_upkeep
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
					has_valid_civic = civic_agribusiness
				}
			}
			energy = 1
			food = 1
		}
	}
	
	upgrades = {
		"building_hyper_entertainment_forum"
	}
	
	prerequisites = {
		"tech_holo_entertainment"
	}
	
	triggered_desc = {		
		text = job_entertainer_effect_desc
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 50
			free_amenities < 5
			OR = {
				free_jobs < 3 #makes it come before any free_jobs = 0 building checks. This makes the build a high priority building.
				NOT = { has_building = building_holo_theatres }
				NOT = { has_building = building_hyper_entertainment_forum }
			}
		}
		modifier = {
			factor = 0
			OR = {
				free_amenities > 20

				# we shouldn't be building more than one of these
				has_building = building_holo_theatres
				has_building = building_hyper_entertainment_forum

				# don't build in consumer goods deficit ( if we care about goods )
				AND = {
					owner = {
						OR = {
							is_regular_empire = yes
							has_valid_civic = civic_machine_servitor
						}

						has_monthly_income = {
							resource = consumer_goods
							value < 0
						}

						# this civic changes upkeep to alloys
						NOT = { has_valid_civic = civic_warrior_culture }
					}
				}

				AND = {
					count_pops = { limit = { is_sapient = yes } count < 75 }
					owner = {
						is_ai = yes
						has_technology = tech_frontier_health
					}
					NOR = {
						has_building = building_clinic
						has_building = building_hospital
					}
				}
				AND = {
					owner = {
						is_ai = yes
						NOT = { has_policy_flag = robots_outlawed }
						has_technology = tech_robotic_workers
					}
					count_pops = { limit = { is_sapient = yes } count < 75 }
					NOT = { has_building = building_robot_assembly_plant }
				}
			}
		}
	}
}

building_hyper_entertainment_forum = {
	base_buildtime = @b2_time
	can_build = no

	category = amenity
	
	potential = {
		has_building = building_holo_theatres
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			owner = { has_valid_civic = civic_warrior_culture }
			has_modifier = slave_colony

		}
	}
	
	convert_to = {
		building_virtual_combat_arena
	}
		
	planet_modifier = {
		job_entertainer_add = @b2_jobs
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					NAND = {
						is_lithoid_empire = yes
						has_valid_civic = civic_agribusiness
					}
				}
			}
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
		upkeep = {
			trigger = {
				exists = owner
				owner = {
					is_lithoid_empire = yes
					has_valid_civic = civic_agribusiness
				}
			}
			energy = 2
			food = 3
			exotic_gases = @b2_rare_upkeep
		}
	}
	
	prerequisites = {
		"tech_hyper_entertainment_forum"
	}
	
	triggered_desc = {		
		text = job_entertainer_effect_desc
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 5
			owner = {
				has_monthly_income = {
					resource = consumer_goods
					value >= 4
				}
			}
			buildings_has_exotic_gases = yes
		}
	}

	on_queued = {
		IF = {
			limit = {
				owner = { has_technology = tech_construction_templates }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_gas_building days = 270 } }
		}
		ELSE_IF = {
			limit = {
				owner = { has_technology = tech_assembly_pattern }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_gas_building days = 390 } }
		}
		else = {
			planet = {
				owner = { set_timed_country_flag = { flag = buildings_new_gas_building days = 510 } }
			}
		}
	}
}

### Modded Buildings ###
building_combat_arena = {
	base_buildtime = @b1_time
	icon = building_holo_theatres

	category = amenity
	
	potential = {
		NOT = {	has_modifier = slave_colony	}		
		owner = { is_regular_empire = yes }
		owner = { has_valid_civic = civic_warrior_culture }
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			owner = { NOT = { has_valid_civic = civic_warrior_culture } }
			has_modifier = slave_colony
			AND = {
				free_building_slots = 0
				owner = { is_ai = yes }
				OR = {
					free_amenities > 30
					AND = {
						count_pops = { limit = { is_sapient = yes } count < 75 }
						owner = {
							is_ai = yes
							has_technology = tech_frontier_health 
						}
						NOR = {
							has_building = building_clinic
							has_building = building_hospital
						}
					}
					AND = {
						owner = {
							is_ai = yes
							NOT = { has_policy_flag = robots_outlawed }
							has_technology = tech_robotic_workers 
						}
						NOT = { has_building = building_robot_assembly_plant }
					}
				}
			}
		}
	}
	
	convert_to = {
		building_holo_theatres
	}
		
	planet_modifier = {
		job_duelist_add = @b1_jobs
	}
	
	army_modifier = {
		army_defense_morale_mult = 0.20
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b1_minerals
		}
		upkeep = {
			energy = @b1_upkeep
		}
	}
	
	upgrades = {
		"building_virtual_combat_arena"
	}
	
	prerequisites = {
		"tech_holo_entertainment"
	}
	
	triggered_desc = {		
		text = job_duelist_effect_desc
	}

	ai_weight = {
		weight = 0
		modifier = {
			weight = 50
			free_amenities < 5
			OR = {
				free_jobs < 3 #makes it come before any free_jobs = 0 building checks. This makes the build a high priority building.
				NOT = { has_building = building_combat_arena }
				NOT = { has_building = building_virtual_combat_arena }
			}
		}
		modifier = {
			factor = 0
			OR = {
				free_amenities > 20

				# we shouldn't be building more than one of these
				has_building = building_combat_arena
				has_building = building_virtual_combat_arena

				# don't build in consumer goods deficit ( if we care about goods )
				AND = {
					owner = {
						OR = {
							is_regular_empire = yes
							has_valid_civic = civic_machine_servitor
						}

						has_monthly_income = {
							resource = consumer_goods
							value < 0
						}

						# this civic changes upkeep to alloys
						NOT = { has_valid_civic = civic_warrior_culture }
					}
				}

				AND = {
					count_pops = { limit = { is_sapient = yes } count < 75 }
					owner = {
						is_ai = yes
						has_technology = tech_frontier_health
					}
					NOR = {
						has_building = building_clinic
						has_building = building_hospital
					}
				}
				AND = {
					owner = {
						is_ai = yes
						NOT = { has_policy_flag = robots_outlawed }
						has_technology = tech_robotic_workers
					}
					count_pops = { limit = { is_sapient = yes } count < 75 }
					NOT = { has_building = building_robot_assembly_plant }
				}
			}
		}
	}
}

building_virtual_combat_arena = {
	base_buildtime = @b2_time
	can_build = no
	icon = building_hyper_entertainment_forum

	category = amenity
	
	potential = {
		has_building = building_combat_arena
	}
	
	allow = {
		has_upgraded_capital = yes
	}
	
	destroy_trigger = {
		exists = owner
		OR = {
			owner = { is_regular_empire = no }
			owner = { NOT = { has_valid_civic = civic_warrior_culture } }
			has_modifier = slave_colony

		}
	}
	
	convert_to = {
		building_hyper_entertainment_forum
	}
		
	planet_modifier = {
		job_duelist_add = @b2_jobs
	}
	
	army_modifier = {
		army_defense_morale_mult = 0.40
	}

	resources = {
		category = planet_buildings
		cost = {
			minerals = @b2_minerals
			exotic_gases = @b2_rare_cost
		}
		upkeep = {
			energy = @b2_upkeep
			exotic_gases = @b2_rare_upkeep
		}
	}
	
	prerequisites = {
		"tech_virtual_combat_arena"
	}

	triggered_desc = {		
		text = job_duelist_effect_desc
	}
	
	ai_weight = {
		weight = 0
		modifier = {
			weight = 5
			owner = {
				has_monthly_income = {
					resource = consumer_goods
					value >= 4
				}
			}
			buildings_has_exotic_gases = yes
		}
	}

	on_queued = {
		IF = {
			limit = {
				owner = { has_technology = tech_construction_templates }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_gas_building days = 270 } }
		}
		ELSE_IF = {
			limit = {
				owner = { has_technology = tech_assembly_pattern }
			}
			owner = { set_timed_country_flag = { flag = buildings_new_gas_building days = 390 } }
		}
		else = {
			planet = {
				owner = { set_timed_country_flag = { flag = buildings_new_gas_building days = 510 } }
			}
		}
	}
}