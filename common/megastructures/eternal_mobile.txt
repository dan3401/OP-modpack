rings_of_eternity = {
	entity = "eternal_mobile_1_section"
	construction_entity = "eternal_mobile_1_section"
	portrait = "GFX_psionic_ee_system"
	place_entity_on_planet_plane = yes
	entity_offset = { x = 0 y = 0 }
	build_time = 180

	resources = {
		category = megastructures
		cost = {
			unity = 100000
			virtue = 10000
		}
		produces = {
			eternium = 30
			ambrosia = 1000
			virtue = 1000
			unity = 1000

		}
	}

	
	construction_blocks_others = no

	potential = {
		owner = {
			has_technology = tech_fallenw
			has_country_flag = eternal_transcendence
		}
	}	


	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#NOT = { has_any_megastructure = yes }
				has_no_non_gate_megastructure = yes
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#can_build_megastructure_on_planet = yes
				OR = {
					planet_size = 100
					planet_size = 200
					is_planet_class = pc_ee_star
	
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_orbital_station"
				has_orbital_station = no
			}

 			# balance for habitats
			custom_tooltip = {
				fail_text = "requires_not_star"
				OR = { 
				is_star = yes
				is_star = no
				}
			}

		} # use these for all non-star megastructures
	}

	# root = system
	# from = country	
	ai_weight = {
		factor = 0
	
		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	
	on_build_complete = {
		every_system_planet = { 
			limit = { is_star = yes }
			change_pc = pc_ee_star
			set_planet_size = -1
		}
		every_system_planet = { 
			limit = { is_star = no 
			NOT = {
				is_planet_class = pc_eternos
				}
			}
			remove_planet = yes
		}
		set_asteroid_belt = {
			radius = 0
		}

		fromfrom.planet = {
			set_planet_flag = has_megastructure
		}
		
		
	}
}