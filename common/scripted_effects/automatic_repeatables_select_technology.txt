AR_select_repeatable_physics_advanced = {
    set_variable = {
        which = AR_index
        value = 0
    }
    set_variable = { which = AR_selected_physics_tech value = -1 }
    while = {
        limit = {
            check_variable = {
                which = AR_selected_physics_tech
                value = -1
            }
            check_variable = {
                which = AR_index
                value < @AR_count_repeatables_physics
            }
        }
        SLEX_get_list_variable_var_index = {
            LIST = AR_priority_physics
            INDEX = AR_index
            VALUE = AR_tech_id
        }
        AR_check_researchable_physics = yes # will set the AR_selected_physics_tech if true
        change_variable = {
            which = AR_index
            value = 1
        }
    }
    if = {
        limit = {
            check_variable = {
                which = AR_selected_physics_tech
                value >= 0
            }
        }
        AR_upgrade_if_possible_physics = yes
        country_event = { id = automatic_repeatables.31 days = 1 }
    }
    # cleanup
    set_variable = { which = AR_index value = 0 }
    set_variable = { which = AR_tech_id value = 0 }
}

AR_select_repeatable_society_advanced = {
    set_variable = {
        which = AR_index
        value = 0
    }
    set_variable = { which = AR_selected_society_tech value = -1 }
    while = {
        limit = {
            check_variable = {
                which = AR_selected_society_tech
                value = -1
            }
            check_variable = {
                which = AR_index
                value < @AR_count_repeatables_society
            }
        }
        SLEX_get_list_variable_var_index = {
            LIST = AR_priority_society
            INDEX = AR_index
            VALUE = AR_tech_id
        }
        AR_check_researchable_society = yes # will set the AR_selected_society_tech if true
        change_variable = {
            which = AR_index
            value = 1
        }
    }
    if = {
        limit = {
            check_variable = {
                which = AR_selected_society_tech
                value >= 0
            }
        }
        AR_upgrade_if_possible_society = yes
        country_event = { id = automatic_repeatables.32 days = 1 }
    }
    # cleanup
    set_variable = { which = AR_index value = 0 }
    set_variable = { which = AR_tech_id value = 0 }
}

AR_select_repeatable_engineering_advanced = {
    set_variable = {
        which = AR_index
        value = 0
    }
    set_variable = { which = AR_selected_engineering_tech value = -1 }
    while = {
        limit = {
            check_variable = {
                which = AR_selected_engineering_tech
                value = -1
            }
            check_variable = {
                which = AR_index
                value < @AR_count_repeatables_engineering
            }
        }
        SLEX_get_list_variable_var_index = {
            LIST = AR_priority_engineering
            INDEX = AR_index
            VALUE = AR_tech_id
        }
        AR_check_researchable_engineering = yes # will set the AR_selected_engineering_tech if true
        change_variable = {
            which = AR_index
            value = 1
        }
    }
    if = {
        limit = {
            check_variable = {
                which = AR_selected_engineering_tech
                value >= 0
            }
        }
        AR_upgrade_if_possible_engineering = yes
        country_event = { id = automatic_repeatables.33 days = 1 }
    }
    # cleanup
    set_variable = { which = AR_index value = 0 }
    set_variable = { which = AR_tech_id value = 0 }
}

AR_select_repeatable_physics_random = {
    if = { # if there is no tech we are waiting for, determine one
        limit = {
            OR = {
                check_variable = { which = AR_selected_physics_tech value = -1 }
                AR_selected_tech_is_option_physics = no
            }
            AR_has_a_repeatable_option_physics = yes
        }
        random_list = {
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_tile_energy_output }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_physics_disallowed_0 value = 1 }
				}
                set_variable = { which = AR_selected_physics_tech value = 0 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_shield_output }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_physics_disallowed_1 value = 1 }
				}
                set_variable = { which = AR_selected_physics_tech value = 1 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_energy_damage }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_physics_disallowed_2 value = 1 }
				}
                set_variable = { which = AR_selected_physics_tech value = 2 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_energy_fire_rate }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_physics_disallowed_3 value = 1 }
				}
                set_variable = { which = AR_selected_physics_tech value = 3 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_reduced_building_cost }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_physics_disallowed_4 value = 1 }
				}
                set_variable = { which = AR_selected_physics_tech value = 4 }
            }
        }
    }
    if = {
        limit = {
            check_variable = { which = AR_selected_physics_tech value >= 0 }
        }
        AR_upgrade_if_possible_physics = yes
        country_event = { id = automatic_repeatables.31 days = 1 }
    }
}

AR_select_repeatable_society_random = {
    if = { # if there is no tech we are waiting for, determine one
        limit = {
            OR = {
                check_variable = { which = AR_selected_society_tech value = -1 }
                AR_selected_tech_is_option_society = no
            }
            AR_has_a_repeatable_option_society = yes
        }
        random_list = {
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_tile_food_output }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_0 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 0 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_core_system_cap }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_1 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 1 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_edict_length }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_2 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 2 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_army_damage }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_3 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 3 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_army_health }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_4 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 4 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_leader_life_span }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_5 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 5 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_naval_cap }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_6 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 6 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_command_limit }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_7 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 7 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_starbase_capacity }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_society_disallowed_8 value = 1 }
				}
                set_variable = { which = AR_selected_society_tech value = 8 }
            }
        }
    }
    if = {
        limit = {
            check_variable = { which = AR_selected_society_tech value >= 0 }
        }
        AR_upgrade_if_possible_society = yes
        country_event = { id = automatic_repeatables.32 days = 1 }
    }
}

AR_select_repeatable_engineering_random = {
    if = { # if there is no tech we are waiting for, determine one
        limit = {
            OR = {
                check_variable = { which = AR_selected_engineering_tech value = -1 }
                AR_selected_tech_is_option_engineering = no
            }
            AR_has_a_repeatable_option_engineering = yes
        }
        random_list = {
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_tile_mineral_output }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_0 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 0 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_military_station_damage }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_1 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 1 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_military_station_health }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_2 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 2 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_improved_armor_output }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_3 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 3 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_explosive_damage }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_4 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 4 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_explosive_fire_rate }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_5 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 5 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_kinetic_damage }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_6 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 6 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_kinetic_fire_rate }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_7 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 7 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_strike_craft_fire_damage }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_8 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 8 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_weapon_type_strike_craft_fire_rate }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_9 value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 9 }
            }
            1 = {
				modifier = {
                    factor = 0
                    NOT = { has_tech_option = tech_repeatable_reduced_building_time }
				}
				modifier = {
                    factor = 0
                    check_variable = { which = AR_engineering_disallowed_a value = 1 }
				}
                set_variable = { which = AR_selected_engineering_tech value = 10 }
            }
        }
    }
    if = {
        limit = {
            check_variable = { which = AR_selected_engineering_tech value >= 0 }
        }
        AR_upgrade_if_possible_engineering = yes
        country_event = { id = automatic_repeatables.33 days = 1 }
    }
}

# if no selected tech
    # reset list
    # for every tech_id
        # if that tech is an option,
            # add tech_id to list, tech_level to other list
    # if length > 0
        # sort list of tech_levels with tech_id zipped ascending
        # pick first tech_id as selected tech
# if a tech is selected
    # upgrade if possible
AR_select_repeatable_physics_cheapest = {
    if = { # if there is no tech we are waiting for, determine one
        limit = {
            OR = {
                check_variable = { which = AR_selected_physics_tech value = -1 }
                AR_selected_tech_is_option_physics = no
            }
            AR_has_a_repeatable_option_physics = yes
        }
        set_variable = { which = AR_cheapest_picks_ids_length value = 0 }
        set_variable = { which = AR_cheapest_picks_levels_length value = 0 }
        # we use AR_selected_physics_tech to use AR_selected_tech_is_option_physics
        set_variable = {
            which = AR_selected_physics_tech
            value = 0
        }
        while = {
            limit = {
                check_variable = {
                    which = AR_selected_physics_tech
                    value < @AR_count_repeatables_physics
                }
            }
            if = {
                limit = {
                    AR_selected_tech_is_option_physics = yes
                }
                SLEX_get_list_variable_var_index = {
                    LIST = AR_physics_disallowed
                    INDEX = AR_selected_physics_tech
                    VALUE = AR_tech_disallowed
                }
                if = { # if tech is allowed
                    limit = {
                        check_variable = { which = AR_tech_disallowed value = 0 }
                    }
                    SLEX_get_list_variable_var_index = {
                        LIST = AR_physics_tech_levels
                        INDEX = AR_selected_physics_tech
                        VALUE = AR_tech_level
                    }
                    SLEX_append_list_variable = {
                        LIST = AR_cheapest_picks_ids
                        VALUE = AR_selected_physics_tech
                    }
                    SLEX_append_list_variable = {
                        LIST = AR_cheapest_picks_levels
                        VALUE = AR_tech_level
                    }
                }
            }
            change_variable = {
                which = AR_selected_physics_tech
                value = 1
            }
        }
        if = { # if list not empty
            limit = {
                check_variable = { which = AR_cheapest_picks_ids_length value > 0 }
            }
            # sort the list
            SLEX_heapsort = {
                LIST = AR_cheapest_picks_levels
                ZIPPED_VALUES = AR_cheapest_picks_ids
                ASCENDING = yes
            }
            # use first tech id as selected tech
            set_variable = { which = AR_selected_physics_tech value = AR_cheapest_picks_ids_0 }
        } else = {
            set_variable = { which = AR_selected_physics_tech value = -1 }
        }
    }
    if = {
        limit = {
            check_variable = { which = AR_selected_physics_tech value >= 0 }
        }
        AR_upgrade_if_possible_physics = yes
        country_event = { id = automatic_repeatables.31 days = 1 }
    }
    # cleanup
    set_variable = { which = AR_tech_level value = 0 }
}

AR_select_repeatable_society_cheapest = {
    if = { # if there is no tech we are waiting for, determine one
        limit = {
            OR = {
                check_variable = { which = AR_selected_society_tech value = -1 }
                AR_selected_tech_is_option_society = no
            }
            AR_has_a_repeatable_option_society = yes
        }
        set_variable = { which = AR_cheapest_picks_ids_length value = 0 }
        set_variable = { which = AR_cheapest_picks_levels_length value = 0 }
        # we use AR_selected_society_tech to use AR_selected_tech_is_option_society
        set_variable = {
            which = AR_selected_society_tech
            value = 0
        }
        while = {
            limit = {
                check_variable = {
                    which = AR_selected_society_tech
                    value < @AR_count_repeatables_society
                }
            }
            if = {
                limit = {
                    AR_selected_tech_is_option_society = yes
                }
                SLEX_get_list_variable_var_index = {
                    LIST = AR_society_disallowed
                    INDEX = AR_selected_society_tech
                    VALUE = AR_tech_disallowed
                }
                if = { # if tech is allowed
                    limit = {
                        check_variable = { which = AR_tech_disallowed value = 0 }
                    }
                    SLEX_get_list_variable_var_index = {
                        LIST = AR_society_tech_levels
                        INDEX = AR_selected_society_tech
                        VALUE = AR_tech_level
                    }
                    SLEX_append_list_variable = {
                        LIST = AR_cheapest_picks_ids
                        VALUE = AR_selected_society_tech
                    }
                    SLEX_append_list_variable = {
                        LIST = AR_cheapest_picks_levels
                        VALUE = AR_tech_level
                    }
                }
            }
            change_variable = {
                which = AR_selected_society_tech
                value = 1
            }
        }
        if = { # if list not empty
            limit = {
                check_variable = { which = AR_cheapest_picks_ids_length value > 0 }
            }
            # sort the list
            SLEX_heapsort = {
                LIST = AR_cheapest_picks_levels
                ZIPPED_VALUES = AR_cheapest_picks_ids
                ASCENDING = yes
            }
            # use first tech id as selected tech
            set_variable = { which = AR_selected_society_tech value = AR_cheapest_picks_ids_0 }
        } else = {
            set_variable = { which = AR_selected_society_tech value = -1 }
        }
    }
    if = {
        limit = {
            check_variable = { which = AR_selected_society_tech value >= 0 }
        }
        AR_upgrade_if_possible_society = yes
        country_event = { id = automatic_repeatables.32 days = 1 }
    }
    # cleanup
    set_variable = { which = AR_tech_level value = 0 }
}

AR_select_repeatable_engineering_cheapest = {
    if = { # if there is no tech we are waiting for, determine one
        limit = {
            OR = {
                check_variable = { which = AR_selected_engineering_tech value = -1 }
                AR_selected_tech_is_option_engineering = no
            }
            AR_has_a_repeatable_option_engineering = yes
        }
        set_variable = { which = AR_cheapest_picks_ids_length value = 0 }
        set_variable = { which = AR_cheapest_picks_levels_length value = 0 }
        # we use AR_selected_engineering_tech to use AR_selected_tech_is_option_engineering
        set_variable = {
            which = AR_selected_engineering_tech
            value = 0
        }
        while = {
            limit = {
                check_variable = {
                    which = AR_selected_engineering_tech
                    value < @AR_count_repeatables_engineering
                }
            }
            if = {
                limit = {
                    AR_selected_tech_is_option_engineering = yes
                }
                SLEX_get_list_variable_var_index = {
                    LIST = AR_engineering_disallowed
                    INDEX = AR_selected_engineering_tech
                    VALUE = AR_tech_disallowed
                }
                if = { # if tech is allowed
                    limit = {
                        check_variable = { which = AR_tech_disallowed value = 0 }
                    }
                    SLEX_get_list_variable_var_index = {
                        LIST = AR_engineering_tech_levels
                        INDEX = AR_selected_engineering_tech
                        VALUE = AR_tech_level
                    }
                    SLEX_append_list_variable = {
                        LIST = AR_cheapest_picks_ids
                        VALUE = AR_selected_engineering_tech
                    }
                    SLEX_append_list_variable = {
                        LIST = AR_cheapest_picks_levels
                        VALUE = AR_tech_level
                    }
                }
            }
            change_variable = {
                which = AR_selected_engineering_tech
                value = 1
            }
        }
        if = { # if list not empty
            limit = {
                check_variable = { which = AR_cheapest_picks_ids_length value > 0 }
            }
            # sort the list
            SLEX_heapsort = {
                LIST = AR_cheapest_picks_levels
                ZIPPED_VALUES = AR_cheapest_picks_ids
                ASCENDING = yes
            }
            # use first tech id as selected tech
            set_variable = { which = AR_selected_engineering_tech value = AR_cheapest_picks_ids_0 }
        } else = {
            set_variable = { which = AR_selected_engineering_tech value = -1 }
        }
    }
    if = {
        limit = {
            check_variable = { which = AR_selected_engineering_tech value >= 0 }
        }
        AR_upgrade_if_possible_engineering = yes
        country_event = { id = automatic_repeatables.33 days = 1 }
    }
    # cleanup
    set_variable = { which = AR_tech_level value = 0 }
}

AR_check_researchable_physics = {
    if = {
        limit = {
            OR = {
                AND = {
                    check_variable = { which = AR_tech_id value = 0 }
                    has_tech_option = tech_repeatable_improved_tile_energy_output
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 1 }
                    has_tech_option = tech_repeatable_improved_shield_output
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 2 }
                    has_tech_option = tech_repeatable_weapon_type_energy_damage
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 3 }
                    has_tech_option = tech_repeatable_weapon_type_energy_fire_rate
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 4 }
                    has_tech_option = tech_repeatable_reduced_building_cost
                }
            }
        }
        set_variable = { which = AR_selected_physics_tech value = AR_tech_id }
    }
}

AR_check_researchable_society = {
    if = {
        limit = {
            OR = {
                AND = {
                    check_variable = { which = AR_tech_id value = 0 }
                    has_tech_option = tech_repeatable_improved_tile_food_output
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 1 }
                    has_tech_option = tech_repeatable_improved_core_system_cap
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 2 }
                    has_tech_option = tech_repeatable_improved_edict_length
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 3 }
                    has_tech_option = tech_repeatable_improved_army_damage
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 4 }
                    has_tech_option = tech_repeatable_improved_army_health
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 5 }
                    has_tech_option = tech_repeatable_improved_leader_life_span
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 6 }
                    has_tech_option = tech_repeatable_naval_cap
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 7 }
                    has_tech_option = tech_repeatable_command_limit
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 8 }
                    has_tech_option = tech_repeatable_improved_starbase_capacity
                }
            }
        }
        set_variable = { which = AR_selected_society_tech value = AR_tech_id }
    }
}

AR_check_researchable_engineering = {
    if = {
        limit = {
            OR = {
                AND = {
                    check_variable = { which = AR_tech_id value = 0 }
                    has_tech_option = tech_repeatable_improved_tile_mineral_output
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 1 }
                    has_tech_option = tech_repeatable_improved_military_station_damage
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 2 }
                    has_tech_option = tech_repeatable_improved_military_station_health
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 3 }
                    has_tech_option = tech_repeatable_improved_armor_output
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 4 }
                    has_tech_option = tech_repeatable_weapon_type_explosive_damage
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 5 }
                    has_tech_option = tech_repeatable_weapon_type_explosive_fire_rate
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 6 }
                    has_tech_option = tech_repeatable_weapon_type_kinetic_damage
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 7 }
                    has_tech_option = tech_repeatable_weapon_type_kinetic_fire_rate
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 8 }
                    has_tech_option = tech_repeatable_weapon_type_strike_craft_fire_damage
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 9 }
                    has_tech_option = tech_repeatable_weapon_type_strike_craft_fire_rate
                }
                AND = {
                    check_variable = { which = AR_tech_id value = 10 }
                    has_tech_option = tech_repeatable_reduced_building_time
                }
            }
        }
        set_variable = { which = AR_selected_engineering_tech value = AR_tech_id }
    }
}
