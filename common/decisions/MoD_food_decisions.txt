
decision_Sv_VFD = {
	owned_planets_only = yes
	prerequisites = { "tech_MoD_S" "tech_housing_1" } 
	enactment_time = @d_S_time 
	icon = decision_MoD_S_VFD
	resources = {
		category = decisions
		cost = {
			trigger = {
				NOT = { owner = { has_ascension_perk = ap_mastery_of_nature } }
				owner = { is_ai = no }
			}
			influence = @d_S_influence 
			energy = @d_S_energy 
			minerals = @d_S_minerals 
			#rare_crystals = @d_S_strat 
			#volatile_motes = @d_S_strat 
		}
		cost = {
			trigger = {
				owner = { has_ascension_perk = ap_mastery_of_nature }
				owner = { is_ai = no }
			}
			influence = @d_S_influence_AP 
			energy = @d_S_energy_AP 
			minerals = @d_S_minerals_AP 
			rare_crystals = @d_S_strat_AP 
			volatile_motes = @d_S_strat_AP 
		}
		cost = {
			trigger = { owner = { is_ai = yes } }
			influence = @d_S_influence_AP 
			energy = @d_S_energy_AP 
			minerals = @d_S_minerals_AP 
		}
	}
	potential = {
		habitable_structure = no
		#owner = { has_technology = "tech_MoD_S" "tech_housing_1" }
		NOT = { owner = { has_country_flag = cf_hide_mod } }
		NOT = { has_planet_flag = pf_Sv_VFD_1 }
	}
	allow = {
		free_district_slots > 0
	}
	effect = {
		add_deposit = d_Sv_VFD_deposit 
		set_planet_flag = pf_Sv_VFD_1 
	}
	ai_weight = {
		weight = 1 # low
		modifier = { # GAI planet quality flag
			weight = 3
			gai_good_food = yes
		}
		modifier = { # capital planet modifier, a particular decision may be particularly wanted in the capital
			weight = 6
			is_capital = yes
		}
		modifier = { # energy stockpile # @d_AI_S_energy @d_AI_U_energy @d_AI_O_energy 
			factor = 0
			from = { resource_stockpile_compare = { resource = energy value < @d_AI_S_energy } }
		}
		modifier = { # minerals stockpile # @d_AI_S_minerals @d_AI_U_minerals 
			factor = 0
			from = { resource_stockpile_compare = { resource = minerals value < @d_AI_S_minerals } }
		}
		modifier = { # influence stockpile # @d_AI_influence 
			factor = 0
			from = { resource_stockpile_compare = { resource = influence value < @d_AI_influence } }
		}
		modifier = { # must be at peace # this could be an AI enabling condition instead, for performance
			factor = 0
			from = { is_at_war = yes }
		}
		modifier = { # not to be wasted on undeveloped places # habitats tend to be 25-40 pops
			factor = 0
			num_pops < 25
		}
		modifier = { # AI profit checks # has_monthly_income must be profit or it'd make no sense at all
			weight = 3
			from = { 
				has_monthly_income = {
					resource = food
					value < 50
				}
			}
		}
		modifier = { # AI profit checks # has_monthly_income must be profit or it'd make no sense at all
			factor = 0
			from = { 
				has_monthly_income = {
					resource = food
					value > 150
				}
			}
		}
	}
}

decision_O_LOSBF = {
	owned_planets_only = yes
	prerequisites = { "tech_MoD_O" "tech_hydroponics" } 
	enactment_time = @d_O_time 
	icon = decision_MoD_S_VFD
	resources = {
		category = decisions
		cost = {
			trigger = {
				NOT = { owner = { has_ascension_perk = ap_voidborn } }
				owner = { is_ai = no }
			}
			influence = @d_O_influence 
			energy = @d_O_energy 
			alloys = @d_O_alloys 
			exotic_gases = @d_O_strat 
			rare_crystals = @d_O_strat 
		}
		cost = {
			trigger = {
				owner = { has_ascension_perk = ap_voidborn }
				owner = { is_ai = no }
			}
			influence = @d_O_influence_AP 
			energy = @d_O_energy_AP 
			alloys = @d_O_alloys_AP 
			exotic_gases = @d_O_strat_AP 
			rare_crystals = @d_O_strat_AP 
		}
		cost = {
			trigger = { owner = { is_ai = yes } }
			influence = @d_O_influence_AP 
			energy = @d_O_energy_AP 
			alloys = @d_O_alloys_AP 
		}
	}
	potential = {
		habitable_structure = no
		#owner = { has_technology = "tech_MoD_O" "tech_hydroponics" }
		NOT = { owner = { has_country_flag = cf_hide_mod } }
		NOT = { has_modifier = modifier_O_max_AP }
	}
	allow = {
		OR = {
			NOT = { has_modifier = modifier_O_max }
			owner = { has_ascension_perk = ap_voidborn }
		}
	}
	effect = {
		add_deposit = d_O_LOSBF_deposit 
		#hidden_effect = { set_planet_flag = }
		if = { # +1 = 1
			limit = { 
				NOR = {
					has_planet_flag = pf_O_1 
					has_planet_flag = pf_O_2 
					has_planet_flag = pf_O_3 
					has_planet_flag = pf_O_4 
					has_planet_flag = pf_O_5 
					has_planet_flag = pf_O_6 
					has_planet_flag = pf_O_7 
				}
			} 
			set_planet_flag = pf_O_1
			break = yes
		}
		else_if = { # +1 = 7
			limit = { 
				has_planet_flag = pf_O_6 
			}
			if = {
				limit = { planet_size > 20 } # 5 O +2
				#set_planet_flag = pf_O_max_AP
				add_modifier = { modifier = modifier_O_max_AP days = -1 }
				remove_modifier = modifier_O_max
				#break = yes
			}
			remove_planet_flag = pf_O_6 
			set_planet_flag = pf_O_7
			break = yes
		}
		else_if = { # +1 = 6
			limit = { 
				has_planet_flag = pf_O_5 
			}
			if = {
				limit = { planet_size > 15 planet_size < 21 } # 4 O +2
				#set_planet_flag = pf_O_max_AP
				add_modifier = { modifier = modifier_O_max_AP days = -1 }
				remove_modifier = modifier_O_max
				#break = yes
			}
			remove_planet_flag = pf_O_5 
			set_planet_flag = pf_O_6
			break = yes
		}
		else_if = { # +1 = 5
			limit = { 
				has_planet_flag = pf_O_4 
			}
			if = {
				limit = { planet_size > 10 planet_size < 16 } # 3 O +2
				#set_planet_flag = pf_O_max_AP
				add_modifier = { modifier = modifier_O_max_AP days = -1 }
				remove_modifier = modifier_O_max
				break = yes
			}
			else_if = {
				limit = { planet_size > 20 } # 5 O +2
				#set_planet_flag = pf_O_max 
				add_modifier = { modifier = modifier_O_max days = -1 }
			}
			remove_planet_flag = pf_O_4 
			set_planet_flag = pf_O_5
			break = yes
		}
		else_if = { # +1 = 4
			limit = { 
				has_planet_flag = pf_O_3 
			}
			if = {
				limit = { planet_size < 11 } # 2 O +2
				#set_planet_flag = pf_O_max_AP
				add_modifier = { modifier = modifier_O_max_AP days = -1 }
				remove_modifier = modifier_O_max
				break = yes
			}
			else_if = {
				limit = { planet_size > 15 planet_size < 21 } # 4 O +2
				#set_planet_flag = pf_O_max 
				add_modifier = { modifier = modifier_O_max days = -1 }
			}
			remove_planet_flag = pf_O_3 
			set_planet_flag = pf_O_4
			break = yes
		}
		else_if = { # +1 = 3
			limit = { 
				has_planet_flag = pf_O_2 
			}
			if = {
				limit = { planet_size > 10 planet_size < 16 } # 3 O +2
				#set_planet_flag = pf_O_max 
				add_modifier = { modifier = modifier_O_max days = -1 }
			}
			remove_planet_flag = pf_O_2 
			set_planet_flag = pf_O_3
			break = yes
		}
		else_if = { # +1 = 2
			limit = { 
				has_planet_flag = pf_O_1 
			}
			if = {
				limit = { planet_size < 11 } # 2 O +2
				#set_planet_flag = pf_O_max 
				add_modifier = { modifier = modifier_O_max days = -1 }
				#break = yes
			}
			remove_planet_flag = pf_O_1 
			set_planet_flag = pf_O_2
			break = yes
		}
	}
	ai_weight = {
		weight = 1 # low
		modifier = { # GAI planet quality flag
			weight = 2
			gai_good_food = yes
		}
		modifier = { # energy stockpile # @d_AI_S_energy @d_AI_U_energy @d_AI_O_energy 
			factor = 0
			from = { resource_stockpile_compare = { resource = energy value < @d_AI_O_energy } }
		}
		modifier = { # alloys stockpile # @d_AI_O_alloys 
			factor = 0
			from = { resource_stockpile_compare = { resource = alloys value < @d_AI_O_alloys } }
		}
		modifier = { # influence stockpile # @d_AI_influence 
			factor = 0
			from = { resource_stockpile_compare = { resource = influence value < @d_AI_influence } }
		}
		modifier = { # must be at peace # this could be an AI enabling condition instead, for performance
			factor = 0
			from = { is_at_war = yes }
		}
		modifier = { # not to be wasted on undeveloped places # habitats tend to be 25-40 pops
			factor = 0
			num_pops < 25
		}
		modifier = { # AI profit checks # has_monthly_income must be profit or it'd make no sense at all
			weight = 3
			from = { 
				has_monthly_income = {
					resource = food
					value < 50
				}
			}
		}
		modifier = { # AI profit checks # has_monthly_income must be profit or it'd make no sense at all
			factor = 0
			from = { 
				has_monthly_income = {
					resource = food
					value > 150
				}
			}
		}
	}
}


