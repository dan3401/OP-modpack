machinedlcmod_merchant = {
    category = complex_drone
    condition_string = DRONE_JOB_TRIGGER
    building_icon = building_galactic_stock_exchange
    clothes_texture_index = 1
    icon = merchant
    possible_pre_triggers = {
        has_owner = yes
        is_enslaved = no
        is_being_purged = no
        is_being_assimilated = no
    }
    possible = {
        drone_job_check_trigger = yes
    }
    planet_modifier = {
        planet_amenities_add = 5
    }
    resources = {
        category = planet_jobs_machinedlcmod_clerk
        produces = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_default
                }
            }
            energy = 8
        }
        produces = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_consumer_goods
                }
            }
            energy = 4
            consumer_goods = 2
        }
        produces = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_unity
                }
            }
            energy = 4
            unity = 2
        }
        produces = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_research_points
                }
            }
            physics_research = 2
            society_research = 2
            engineering_research = 2
        }
        upkeep = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_research_points
                }
            }
            energy = 1
        }
        produces = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_strategic_resources
                }
            }
            volatile_motes = 0.8
            exotic_gases = 0.8
            rare_crystals = 0.8
        }
        upkeep = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_research_points
                }
            }
            energy = 2
        }
        produces = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_processing_capacity
                }
            }
            machinedlc_processing_capacity = 2
            machinedlc_processing_capacity_supply = 2
        }
        upkeep = {
            trigger = {
                owner = {
                    has_policy_flag = machinedlcmod_trade_policy_research_points
                }
            }
            energy = 1
        }
    }
    triggered_planet_modifier = {
        potential = {
            OR = {
                has_trait = trait_robot_domestic_protocols
                has_trait = trait_charismatic
            }
        }
        modifier = {
            planet_amenities_add = 1
        }
    }
    triggered_planet_modifier = {
        potential = {
            has_trait = trait_repugnant
        }
        modifier = {
            planet_amenities_add = -1
        }
    }
    weight = {
        weight = @ruler_job_weight
        modifier = {
            factor = 1.5
            OR = {
                has_trait = trait_robot_domestic_protocols
                has_trait = trait_charismatic
            }
        }
        modifier = {
            factor = 0.5
            has_trait = trait_repugnant
        }
        modifier = {
            factor = 5
            has_job = machinedlcmod_merchant
        }
        modifier = {
            factor = 0.01
            planet.controller = {
                OR = {
                    is_country_type = swarm
                    is_country_type = ai_empire
                }
            }
            OR = {
                NOT = {
                    exists = event_target:custodian_bot
                }
                AND = {
                    exists = event_target:custodian_bot
                    NOT = {
                        species = {
                            is_same_value = event_target:custodian_bot
                        }
                    }
                }
            }
        }
    }
}
