# Entering Space Age (HIDDEN)
country_event = {
	id = primitive.16
	hide_window = yes

	trigger = {
		is_country_type = primitive
		has_country_flag = early_space_age
		OR = {
			AND = {
				exists = from
				from = {
					OR = {
						is_country_type = default
						is_country_type = awakened_fallen_empire
						is_country_type = ascended_empire
						is_country_type = lost_empire
					}
				}
			}
			AND = {
				NOT = { has_country_flag = recently_advanced }
				years_passed > 25
				exists = home_planet
				home_planet = { has_observation_outpost = no }			
			}
		}
	}

	mean_time_to_happen = {
		years = 100

		modifier = {
			factor = 0.6
			has_country_flag = acquired_tech
		}
	}

	immediate = {
		remove_country_flag = early_space_age
		set_country_flag = primitives_can_into_space
		set_country_type = default
		change_country_flag = random
		if = {
			limit = { is_species_class = MAM }
			set_graphical_culture = mammalian_01
		}
		if = {
			limit = { is_species_class = REP }
			set_graphical_culture = reptilian_01
		}
		if = {
			limit = { is_species_class = AVI }
			set_graphical_culture = avian_01
		}
		if = {
			limit = { is_species_class = ART }
			set_graphical_culture = arthropoid_01
		}
		if = {
			limit = { is_species_class = MOL }
			set_graphical_culture = molluscoid_01
		}
		if = {
			limit = { is_species_class = FUN }
			set_graphical_culture = fungoid_01
		}
		if = {
			limit = { is_species_class = PLANT }
			set_graphical_culture = plantoid_01
		}		
		change_government = {
			authority = random
			civics = random
		}
		set_name = random
		if = {
			limit = {
				home_planet = {
					has_observation_outpost = yes
				}
			}
			home_planet = {
				observation_outpost_owner = {
					country_event = { id = primitive.17 }
				}
			}
		}
		add_resource = {
			energy = 500
			minerals = 1000 # enough for a spaceport and then some
		}

		if = {
			limit = {
				capital_scope = { is_planet_class = pc_ringworld_habitable } 
			}
			# hope you find some mineral deposits out in the void. Here's an extra subsidy to tide you over until the resource shortages cripple you.
			add_resource = {
				energy = 1000
				food = 1000
				minerals = 1000
				alloys = 1000
				volatile_motes = 500
				exotic_gases = 500
				rare_crystals = 500
			}
		}

		add_resource = { influence = 300 }
		capital_scope = {
			clear_blockers = yes
			while = {
				limit = { 
					num_pops < 8
					#free_housing > 0
				}
				create_pop = {
					species = owner
				}
			}
			remove_building = building_primitive_farm
			remove_building = building_primitive_mine
			remove_building = building_primitive_factory
			remove_building = building_primitive_capital
			remove_building = building_urban_dwellings
			remove_building = building_urban_dwellings
			
			add_building = building_capital
			
			if = {
				limit = { NOT = { is_planet_class = pc_ringworld_habitable } }
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_city
				add_district = district_farming
				add_district = district_farming
				add_district = district_farming
				add_district = district_mining
				add_district = district_mining
				add_district = district_generator
				add_district = district_generator

				add_building = building_research_lab_1
				add_building = building_foundry_1
				add_building = building_factory_1
			}
			if = {
				limit = { is_planet_class = pc_ringworld_habitable }
				add_district = district_rw_city
				add_district = district_rw_farming
				
				add_building = building_chemical_plant
				add_building = building_foundry_1
			}

			remove_all_armies = yes
			solar_system = {
				if = {
					limit = {
						NOT = { exists = starbase }
					}
					create_starbase = {
						size = starbase_outpost
						owner = root
					}
				}
				else_if = {
					limit = {
						starbase = {
							NOT = { owner = { is_same_value = root } }
						}
					}	
					starbase = {
						owner = { country_event = { id = primitive.180 days = 10 } }
					}
				}
			}				
		}
		random_owned_ship = {
			limit = { is_ship_size = primitive_space_station }
			fleet = { destroy_fleet = THIS }
		}
	}
}